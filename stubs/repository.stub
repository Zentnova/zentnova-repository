<?php

namespace App\Repositories;

use App\Models\{{modelName}};

class {{className}}
{
    protected $model;

    public function __construct()
    {
        $this->model = resolve({{modelName}}::class);
    }

    /**
     * ดึงข้อมูลทั้งหมด
     */
    public function all()
    {
        return $this->model->all();
    }

    /**
     * ดึงข้อมูลโดยใช้ ID
     */
    public function find($id)
    {
        return $this->model->find($id);
    }

    /**
     * ดึงข้อมูลแบบแบ่งหน้า
     */
    public function paginate($perPage = 10)
    {
        return $this->model->paginate($perPage);
    }

    /**
     * ดึงข้อมูลแรกที่พบ
     */
    public function first()
    {
        return $this->model->first();
    }

    /**
     * ค้นหาข้อมูลตามเงื่อนไข AND
     */
    public function whereAll(array $conditions,$search)
    {
        return $this->model->whereAll($conditions,'LIKE',"%$search%")->get();
    }

    /**
    * ค้นหาข้อมูลตามเงื่อนไข OR
    */
    public function whereAny(array $conditions,$search)
    {
       return $this->model->whereAny($conditions,'LIKE',"%$search%")->get();
    }


    /**
    *สร้างใหม่ Model
    */
    public function create(array $data)
    {
       return $this->valuable($this->model,$data);
    }

    /**
    *แก้ไข Model
    */
    public function valuable({{modelName}} $model,array $data)
    {
       $data = (object) $data;

       !isset($data->name) ?: $model->name = $data->name;
       //

       $model->save();

       return $model;
    }

    /**
     * สร้างข้อมูลใหม่
     */
    public function create(array $data)
    {
        return $this->model->create($data);
    }

    /**
     * อัปเดตข้อมูลตาม ID
     */
    public function update($id, array $data)
    {
        $record = $this->model->find($id);
        if ($record) {
            $record->update($data);
            return $record;
        }
        return null;
    }

    /**
     * ลบข้อมูลแบบ Soft Delete
     */
    public function delete($id)
    {
        $record = $this->model->find($id);
        if ($record) {
            return $record->delete();
        }
        return false;
    }

    /**
     * ลบข้อมูลถาวร (Hard Delete)
     */
    public function forceDelete($id)
    {
        $record = $this->model->withTrashed()->find($id);
        if ($record) {
            return $record->forceDelete();
        }
        return false;
    }

    /**
     * กู้คืนข้อมูลที่ถูกลบ (Restore)
     */
    public function restore($id)
    {
        $record = $this->model->onlyTrashed()->find($id);
        if ($record) {
            return $record->restore();
        }
        return false;
    }
}
